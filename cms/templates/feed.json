{% header "Content-Type: application/json" %}
{% set hosts = craft.users.group("owners").all() %}
{% set baseUrl = alias('@cloudfrontUrl') ~ '/' %}
{% do craft.webperf.includeBeacon(false) %}
{% do seomatic.config.renderEnabled(false) %}
{% set host = hosts[0] %}
{% set hostPhoto = host.getPhoto() %}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "{{ showInfo.showTitle | typogrifyFeed }}",
    "description": "{{ showInfo.showDescription |typogrifyFeed }}",
    "icon": "{{ showInfo.showImage.one().getUrl() }}",
    "home_page_url": "{{ showInfo.showUrl }}",
    "feed_url": "{{ siteUrl('/feed.json') }}",
    "author": {
        "name": "{{ host.fullName | typogrifyFeed }}",
        "url": "{{ host.profileUrl }}",
        "avatar": "{{ hostPhoto.getUrl() }}"
    },
    "items": [
        {% apply spaceless %}
        {% set episodes = craft.entries.section("episodes").with([
            'episodeHosts',
            'episodeMedia',
        ]).all() %}
        {% for episode in episodes %}
            {% set summaryText = stringy(episode.episodeSummary).lines()[0] |truncateOnWord(300) |typogrifyFeed %}
            {% set transAudioUrl = craft.transcoder.getAudioUrl(episode.episodeMedia[0], {
                "audioBitRate": "128k",
                "audioSampleRate": 44100,
                "audioChannels": 1
            }) %}
{# Disable Chartable tracking; it gets flagged by some ad blockers
            {% if not craft.app.config.general.devMode %}
                {% set transAudioUrl = transAudioUrl | replace('/^(http|https):/', '') %}
                {% set transAudioUrl = transAudioUrl | replace('//', '') %}
                {% set transAudioUrl = "https://chtbl.com/track/81493/#{transAudioUrl}" %}
            {% endif %}
#}
            {# This takes up too much time to do every iteration through the loop while rendering
            # the RSS feed. A better idea would be to cache it at entry save
            # @TODO cache the file info so we can use it later

            {% set fileInfo = craft.transcoder.getFileInfo(episode.episodeMedia[0], true) %}
            #}
            {
                "id": "{{ url(episode.episodeNumber) }}",
                "url": "{{ episode.url }}",
                "title": "{{ episode.title }}",
                "content_html": {% apply json_encode | raw %}{% apply spaceless %}<p>{{ episode.episodeSummary | typogrifyFeed | nl2br  }}</p>
                <ul>
                {% for link in episode.episodeReferenceLinks %}
                <li>
                <a href='{{ link.linkUrl }}' >{{ link.linkName }}</a>
                </li>
                {% endfor %}
                </ul>{% endapply %}{% endapply %},
                "content_text": {% apply json_encode | raw %}{% apply spaceless %}{{ episode.episodeSummary | striptags | typogrifyFeed | nl2br }}{% endapply %}{% endapply %},
                "summary": "{{ summaryText }}",
                "image": "{{ showInfo.showImage.one().getUrl() }}",
                "date_published": "{{ episode.postDate | atom }}",
                "date_modified": "{{ episode.postDate | atom }}",
                "attachments": [
                        {
                            "url": "{{ transAudioUrl }}",
                            "mime_type": "audio/mpeg"
                        {#
                            "size_in_bytes": {{ fileInfo.size ?? 0 }},
                            "duration_in_seconds": {{ fileInfo.duration ?? 0 | round }}
                        #}
                        }
                    ]
                }{% if not loop.last %},{% endif %}
        {% endfor %}
        {% endapply %}
    ]
}
