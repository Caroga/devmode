{"version":3,"sources":["webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/modules/es.string.replace.js"],"names":["re1","re2","regexpFlags","stickyHelpers","nativeExec","RegExp","prototype","exec","nativeReplace","String","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","call","lastIndex","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","undefined","str","reCopy","match","i","re","this","sticky","flags","source","charsAdded","strCopy","indexOf","slice","multiline","input","index","length","global","arguments","module","exports","redefine","fails","wellKnownSymbol","regexpExec","createNonEnumerableProperty","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","result","groups","a","REPLACE_KEEPS_$0","REPLACE","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","split","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","methods","nativeMethod","regexp","arg2","forceStringMethod","done","value","stringMethod","regexMethod","string","arg","charAt","S","unicode","classof","R","TypeError","anObject","that","ignoreCase","dotAll","RE","s","f","toInteger","requireObjectCoercible","createMethod","CONVERT_TO_STRING","$this","pos","first","second","position","size","charCodeAt","codeAt","$","target","proto","forced","fixRegExpWellKnownSymbolLogic","toObject","toLength","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeCallNative","reason","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","res","rx","functionalReplace","fullUnicode","results","push","it","accumulatedResult","nextSourcePosition","matched","captures","j","namedCaptures","replacerArgs","concat","replacement","getSubstitution","tailPos","m","symbols","ch","capture","n"],"mappings":"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","file":"js/vuetablepaginationinfo-legacy.75f102225ddb4f5fcb05.js","sourcesContent":["'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n"],"sourceRoot":""}