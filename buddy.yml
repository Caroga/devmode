- pipeline: "Build & Deploy to Production"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "https://devmode.fm/"
  trigger_condition: "ALWAYS"
  actions:
    - action: "Execute: webpack build"
      type: "BUILD"
      working_directory: "/buddy/devmode"
      docker_image_name: "library/node"
      docker_image_tag: "11.15.0"
      execute_commands:
        - "cd docker-config/webpack-dev-devmode"
        - "npm ci"
      setup_commands:
        - "npm install -g webpack webpack-cli && apt-get update && apt-get install -y ca-certificates fonts-liberation gconf-service libgl1-mesa-glx libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 libappindicator1 libnss3 lsb-release wget xdg-utils"
      volume_mappings:
        - "/:/buddy/devmode"
      trigger_condition: "ALWAYS"
      shell: "BASH"
    - action: "Execute: "
      type: "BUILD"
      working_directory: "/buddy/devmode"
      docker_image_name: "library/php"
      docker_image_tag: "7.4"
      execute_commands:
        - "cd cms"
        - "composer install --no-scripts --no-interaction --prefer-dist --optimize-autoloader --ignore-platform-reqs"
      setup_commands:
        - "echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/buddy.ini"
        - "apt-get update && apt-get install -y git zip"
        - "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
        - "# php ext gd"
        - "apt-get install -y libfreetype6-dev"
        - "apt-get install -y libjpeg62-turbo-dev"
        - "apt-get install -y libpng-dev"
        - "docker-php-ext-configure gd --with-freetype --with-jpeg"
        - "docker-php-ext-install gd"
        - "# php ext zip"
        - "apt-get install -y zip"
        - "apt-get install -y unzip"
        - "apt-get install -y zlib1g-dev"
        - "apt-get install -y libzip-dev"
        - "docker-php-ext-install zip"
        - "# php ext pdo_mysql"
        - "docker-php-ext-configure pdo_mysql --with-pdo-mysql"
        - "docker-php-ext-install pdo_mysql"
      volume_mappings:
        - "/:/buddy/devmode"
      trigger_condition: "ALWAYS"
      shell: "BASH"
    - action: "Upload files to devMode.fm"
      type: "SFTP"
      input_type: "BUILD_ARTIFACTS"
      local_path: "cms/"
      remote_path: "/home/forge/devmode-atomic/deploy-cache"
      login: "${ssh_username}"
      host: "devMode.fm"
      port: "22"
      authentication_mode: "PUBLIC_KEY"
    - action: "Post-deployment action"
      type: "SSH_COMMAND"
      working_directory: "/home/forge/devmode.fm/"
      login: "${ssh_username}"
      host: "devMode.fm"
      port: "22"
      authentication_mode: "PUBLIC_KEY"
      commands:
        - "if [ -d \"releases/$BUDDY_EXECUTION_REVISION\" ] && [ \"$BUDDY_EXECUTION_REFRESH\" = \"true\" ];"
        - "then"
        - " echo \"Removing: releases/$BUDDY_EXECUTION_REVISION\""
        - " rm -rf releases/$BUDDY_EXECUTION_REVISION;"
        - "fi"
        - "if [ ! -d \"releases/$BUDDY_EXECUTION_REVISION\" ];"
        - "then"
        - " echo \"Creating: releases/$BUDDY_EXECUTION_REVISION\""
        - " cp -dR deploy-cache releases/$BUDDY_EXECUTION_REVISION;"
        - "fi"
        - "echo \"Creating: persistence directories\""
        - "mkdir -p storage"
        - "echo \"Symlinking: persistence directories\""
        - "ln -nfs ${remote_path}/storage ${remote_path}/releases/$BUDDY_EXECUTION_REVISION"
        - "ln -nfs ${remote_path}/transcoder ${remote_path}/releases/$BUDDY_EXECUTION_REVISION/web"
        - "echo \"Linking current to revision: $BUDDY_EXECUTION_REVISION\""
        - "rm -f current"
        - "ln -s releases/$BUDDY_EXECUTION_REVISION current"
        - "echo \"Removing old releases\""
        - "cd releases && ls -t | tail -n +11 | xargs rm -rf"
      trigger_condition: "ALWAYS"
      run_as_script: true
      shell: "BASH"
    - action: "Prep Craft CMS"
      type: "SSH_COMMAND"
      working_directory: "/home/forge/devmode.fm/current"
      login: "forge"
      host: "devmode.fm"
      port: "22"
      authentication_mode: "PUBLIC_KEY"
      commands:
        - "# Move our env file into place"
        - "cp ../../.env ./.env"
        - "# Ensure the craft script is executable"
        - "chmod a+x craft"
        - "# Run pending migrations"
        - "./craft migrate/all"
        - "# Sync project config"
        - "./craft project-config/sync"
        - "./craft clear-caches/all"
        - "# Restart PHP-FPM"
        - "echo \"\" | sudo -S service php7.1-fpm reload"
      trigger_condition: "ALWAYS"
      run_as_script: true
      shell: "BASH"
    - action: "Send notification to nystudio107 channel"
      type: "SLACK"
      content: "[#$BUDDY_EXECUTION_ID] $BUDDY_PIPELINE_NAME execution by $BUDDY_EXECUTION_REVISION_COMMITTER_NAME ."
      blocks: "[{\"type\":\"section\",\"fields\":[{\"type\":\"mrkdwn\",\"text\":\"*Successful execution:* <$BUDDY_EXECUTION_URL|Execution #$BUDDY_EXECUTION_ID $BUDDY_EXECUTION_COMMENT>\"},{\"type\":\"mrkdwn\",\"text\":\"*Pipeline:* <$BUDDY_PIPELINE_URL|$BUDDY_PIPELINE_NAME>\"},{\"type\":\"mrkdwn\",\"text\":\"*Branch:* $BUDDY_EXECUTION_BRANCH\"},{\"type\":\"mrkdwn\",\"text\":\"*Project:* <$BUDDY_PROJECT_URL|$BUDDY_PROJECT_NAME>\"}]}]"
      channel: "CAYN15RD0"
      channel_name: "nystudio107"
      trigger_condition: "ALWAYS"
      integration_hash: "5ef0d26820cfeb531cb10738"
  variables:
    - key: "remote_path"
      value: "/home/forge/devmode.fm"
      id: 390927
      description: "Root directory of the project"
    - key: "ssh_username"
      value: "forge"
      id: 390925
