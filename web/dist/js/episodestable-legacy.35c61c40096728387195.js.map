{"version":3,"sources":["webpack:///./src/vue/EpisodesFieldDefs.js","webpack:///./node_modules/core-js/modules/es.number.to-fixed.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./node_modules/core-js/internals/to-object.js","webpack:///./node_modules/core-js/internals/array-iteration.js","webpack:///./node_modules/core-js/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/is-array.js","webpack:///./node_modules/core-js/modules/es.array.filter.js"],"names":["__webpack_exports__","name","sortField","title","titleClass","dataClass","width","visible","$","__webpack_require__","toInteger","thisNumberValue","repeat","fails","nativeToFixed","toFixed","floor","Math","pow","x","n","acc","target","proto","forced","call","fractionDigits","e","z","j","k","number","this","fractDigits","data","sign","result","multiply","c","index","c2","divide","dataToString","s","t","String","length","RangeError","x2","log","slice","SPECIES","wellKnownSymbol","module","exports","METHOD_NAME","array","constructor","foo","Boolean","requireObjectCoercible","count","str","Infinity","classof","value","TypeError","argument","Object","bind","IndexedObject","toObject","toLength","arraySpeciesCreate","push","createMethod","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","that","specificCreate","O","self","boundFunction","create","undefined","forEach","map","filter","some","every","find","findIndex","isObject","isArray","originalArray","C","Array","prototype","arg","$filter","arrayMethodHasSpeciesSupport","arguments"],"mappings":"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","file":"js/episodestable-legacy.35c61c40096728387195.js","sourcesContent":["// Field definitions for EpisodesTable.vue\nexport default [\n    {\n        name: '__slot:episode-display',\n        sortField: 'title',\n        title: 'Episode',\n        titleClass: 'center pageListingDisplay',\n        dataClass: 'center',\n        width: '100%',\n    },\n    {\n        name: 'summary',\n        visible: false,\n    },\n    {\n        name: 'episodeNumber',\n        visible: false,\n    },\n    {\n        name: 'postDate',\n        visible: false,\n    },\n];\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  return !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !arrayMethodHasSpeciesSupport('filter') }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}