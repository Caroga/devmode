{"version":3,"sources":["webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/modules/es.string.replace.js"],"names":["re1","re2","regexpFlags","nativeExec","RegExp","prototype","exec","nativeReplace","String","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","call","lastIndex","NPCG_INCLUDED","undefined","str","reCopy","match","i","re","this","source","global","index","length","arguments","module","exports","hide","redefine","fails","wellKnownSymbol","regexpExec","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","result","groups","a","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","split","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","methods","nativeMethod","regexp","arg2","forceStringMethod","done","value","stringMethod","regexMethod","string","arg","charAt","S","unicode","classof","R","TypeError","anObject","that","ignoreCase","multiline","dotAll","sticky","toInteger","requireObjectCoercible","createMethod","CONVERT_TO_STRING","$this","pos","first","second","position","size","charCodeAt","slice","codeAt","$","target","proto","forced","fixRegExpWellKnownSymbolLogic","toObject","toLength","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","REPLACE","maybeCallNative","searchValue","replaceValue","replacer","res","rx","functionalReplace","fullUnicode","results","push","it","accumulatedResult","nextSourcePosition","matched","captures","j","namedCaptures","replacerArgs","concat","replacement","getSubstitution","tailPos","m","symbols","ch","capture","n","f"],"mappings":"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","file":"js/vuetablepaginationinfo-legacy.2226335162a38c1066c0.js","sourcesContent":["'use strict';\nvar regexpFlags = require('./regexp-flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n    if (sham) hide(RegExp.prototype[SYMBOL], 'sham', true);\n  }\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n"],"sourceRoot":""}