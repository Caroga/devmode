version: '3.7'

services:
  # ffmpeg - video/audio encoding
  ffmpeg:
    image: jrottenberg/ffmpeg
  # nginx - web server
  nginx:
    build:
      context: .
      dockerfile: ./docker-config/nginx/Dockerfile
    env_file: &env
      - ./.env
    environment:
      PHP_REVALIDATE: 1
    links:
      - php
    ports:
      - "8000:80"
    volumes:
      - ./cms/web/cpresources:/var/www/project/cms/web/cpresources
      - ./cms/web:/var/www/project/cms/web
  # php - personal home page
  php:
    build:
      context: .
      dockerfile: ./docker-config/php/Dockerfile
    env_file:
      *env
    environment:
      PHP_REVALIDATE: 1
    expose:
      - "9000"
    links:
      - postgres
      - redis
    volumes:
      - cpresources:/var/www/project/cms/web/cpresources
      - ./cms/composer.json:/var/www/project/cms/composer.json
      - ./cms/composer.lock:/var/www/project/cms/composer.lock
      - ./cms/config:/var/www/project/cms/config
      - ./cms/modules:/var/www/project/cms/modules
      - ./cms/templates:/var/www/project/cms/templates
      - ./cms/web:/var/www/project/cms/web
  # postgres - database
  postgres:
    env_file:
      *env
    environment:
      POSTGRES_DB: project
      POSTGRES_USER: project
      POSTGRES_PASSWORD: project
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - db-data:/usr/local/pgsql/data
  # redis - key/value database for caching & php sessions
  redis:
    image: redis:latest
    expose:
      - "6379"
  # webpack - frontend build system
  webpack:
    build:
      context: .
      dockerfile: ./docker-config/webpack/Dockerfile
    command: npm run debug
    env_file:
      *env
    ports:
      - "8080:8080"
    volumes:
      - node-modules:/var/www/project/node_modules
      - ./src:/var/www/project/src

volumes:
  db-data:
  cpresources:
  node-modules:
