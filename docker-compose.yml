version: '3.7'

services:
  # nginx - web server
  nginx:
    build:
      context: .
      dockerfile: ./docker-config/nginx/Dockerfile
    env_file: &env
      - ./cms/.env
    links:
      - php
    ports:
      - "8000:80"
    volumes:
      - cpresources:/var/www/project/cms/web/cpresources
      - ./cms/web:/var/www/project/cms/web:cached
  # php - personal home page
  php:
    build:
      context: .
      dockerfile: ./docker-config/php-dev-devmode/Dockerfile
    depends_on:
      - "postgres"
      - "redis"
    env_file:
      *env
    expose:
      - "9000"
    links:
      - postgres
      - redis
    volumes:
      - cpresources:/var/www/project/cms/web/cpresources
      - vendor:/var/www/project/cms/vendor
      - storage:/var/www/project/cms/storage
      - ./cms:/var/www/project/cms:cached
      - ./cms/storage/logs:/var/www/project/cms/storage/logs:delegated
  # postgres - database
  postgres:
    build:
      context: .
      dockerfile: ./docker-config/postgres/Dockerfile
    env_file:
      *env
    environment:
      POSTGRES_DB: project
      POSTGRES_USER: project
      POSTGRES_PASSWORD: project
    ports:
      - "5432:5432"
    volumes:
      - db-data:/usr/local/pgsql/data
  # redis - key/value database for caching & php sessions
  redis:
    build:
      context: .
      dockerfile: ./docker-config/redis/Dockerfile
    expose:
      - "6379"
  # webpack - frontend build system
  webpack:
    build:
      context: .
      dockerfile: ./docker-config/webpack-dev-devmode/Dockerfile
    env_file:
      *env
    ports:
      - "8080:8080"
    volumes:
      - node-modules:/var/www/project/node_modules
      - ./src:/var/www/project/src:cached
      - ./cms/templates:/var/www/project/cms/templates:cached
      - ./cms/web/dist:/var/www/project/cms/web/dist:delegated
      - ./docker-config/webpack-dev-devmode:/var/www/project/docker-config/webpack-dev-devmode:delegated

volumes:
  db-data:
  cpresources:
  node-modules:
  storage:
  vendor:
